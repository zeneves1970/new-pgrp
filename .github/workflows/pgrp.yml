name: Cache and Process Links

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # Executar todos os dias à meia-noite

jobs:
  update_cache:
    runs-on: ubuntu-latest

    steps:
      # Check-out do código para garantir que o repositório esteja disponível
      - name: Checkout code
        uses: actions/checkout@v3

      # Carregar a cache anterior
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ./seen_links.txt
          key: seen-links-cache-{{ hashFiles('seen_links.txt') }}
          restore-keys: |
            seen-links-cache-

      # Calculando o hash do arquivo seen_links.txt antes de rodar o script
      - name: Get Last Hash
        id: get_last_hash
        run: |
          if [ -f seen_links.txt ]; then
            LAST_HASH=$(sha256sum seen_links.txt | awk '{print $1}')
            echo "Last hash: $LAST_HASH"
          else
            echo "File seen_links.txt does not exist."
            LAST_HASH="notfound"
          fi
          echo "LAST_HASH=$LAST_HASH" >> $GITHUB_ENV

      # Executar o script Python (pgrp.py)
      - name: Run Python script
        run: python3 ./pgrp.py

      # Calcular o novo hash após rodar o script
      - name: Get Current Hash
        id: get_current_hash
        run: |
          CURRENT_HASH=$(sha256sum seen_links.txt | awk '{print $1}')
          echo "Current hash: $CURRENT_HASH"
          echo "CURRENT_HASH=$CURRENT_HASH" >> $GITHUB_ENV

      # Verificar se houve alteração no arquivo e decidir se a cache deve ser atualizada
      - name: Check if Cache Should Be Updated
        id: check_cache_update
        run: |
          if [ "$LAST_HASH" != "$CURRENT_HASH" ]; then
            echo "Cache will be updated."
            echo "UPDATE_CACHE=true" >> $GITHUB_ENV
          else
            echo "Cache will not be updated."
            echo "UPDATE_CACHE=false" >> $GITHUB_ENV

      # Atualizar a cache (se necessário)
      - name: Save Cache
        if: env.UPDATE_CACHE == 'true'
        uses: actions/cache@v3
        with:
          path: ./seen_links.txt
          key: seen-links-cache-${{ hashFiles('seen_links.txt') }}
