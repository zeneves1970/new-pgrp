name: Send Emails on New Links

on:
  push:
    branches:
      - main
  schedule:
    - cron: "*/15 * * * *"  # Executar a cada 15 minutos

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Criar banco de dados SQLite se n√£o existir
    - name: Create SQLite Database if Not Exists
      run: |
        python3 -c "import sqlite3; \
          try: \
            conn = sqlite3.connect('seen_links_pgrp.db'); \
            cursor = conn.cursor(); \
            cursor.execute('CREATE TABLE IF NOT EXISTS links (link TEXT PRIMARY KEY)'); \
            conn.commit(); \
            conn.close(); \
          except sqlite3.DatabaseError as e: \
            print(f'Erro ao criar banco de dados: {e}');"

    # Executar o script Python
    - name: Run Script
      env:
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        TO_EMAIL: ${{ secrets.TO_EMAIL }}
        DROPBOX_ACCESS_TOKEN: ${{ secrets.DROPBOX_ACCESS_TOKEN }}
      run: python3 pgrp.py

    # Upload do banco de dados atualizado para o Dropbox
    - name: Upload Updated Database to Dropbox
      run: |
        curl -X POST https://content.dropboxapi.com/2/files/upload \
          --header "Authorization: Bearer ${{ secrets.DROPBOX_ACCESS_TOKEN }}" \
          --header "Dropbox-API-Arg: {\"path\": \"/Apps/monitor_pgrp/seen_links_pgrp.db\",\"mode\": \"overwrite\",\"autorename\": true}" \
          --data-binary @seen_links_pgrp.db
        echo "Banco de dados atualizado no Dropbox."
