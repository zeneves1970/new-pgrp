name: Process Links and Update Cache

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Exemplo de execução diária

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure seen_links.txt Exists
        run: |
          if [ ! -f seen_links.txt ]; then
            touch seen_links.txt
          fi

      - name: Read last hash from file
        id: read_last_hash
        run: |
          if [ -f last_hash.txt ]; then
            LAST_HASH=$(cat last_hash.txt)
            echo "LAST_HASH=${LAST_HASH}" >> $GITHUB_ENV
          else
            echo "LAST_HASH=none" >> $GITHUB_ENV
          fi

      - name: Generate Current Hash
        id: generate_current_hash
        run: |
          CURRENT_HASH=$(sha256sum seen_links.txt | awk '{print $1}')
          echo "CURRENT_HASH=${CURRENT_HASH}" >> $GITHUB_ENV

      - name: Check if Cache Should Be Updated
        id: check_cache_update
        run: |
          if [ "$LAST_HASH" != "$CURRENT_HASH" ]; then
            echo "Cache will be updated."
            echo "UPDATE_CACHE=true" >> $GITHUB_ENV
          else
            echo "Cache will not be updated."
            echo "UPDATE_CACHE=false" >> $GITHUB_ENV

      - name: Run Script
        run: python3 pgrp.py

      - name: Save Hash After Script Execution
        run: |
          echo "${{ env.CURRENT_HASH }}" > last_hash.txt

      - name: Update Cache
        if: ${{ env.UPDATE_CACHE == 'true' }}
        uses: actions/cache@v3
        with:
          path: seen_links.txt
          key: seen-links-cache-${{ env.CURRENT_HASH }}
