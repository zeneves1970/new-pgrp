name: Monitor News

on:
  schedule:
    - cron: '*/15 * * * *'  # Executar a cada 15 minutos

concurrency:
  group: monitor-news  # Evita execuções paralelas
  cancel-in-progress: true  # Cancela a execução anterior se uma nova for disparada

jobs:
  monitor_news:
    runs-on: ubuntu-latest
    steps:
      # Passo 1: Fazer o checkout do repositório
      - name: Checkout do repositório
        uses: actions/checkout@v3

      # Passo 2: Limpar cache de dependências do Python
      - name: Limpar cache de dependências
        run: |
          rm -rf ~/.cache/pip
          rm -rf /tmp/pip-*

      # Passo 3: Configurar Python
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.x'  # Especificar versão do Python
          cache: 'pip'  # Cache para dependências instaladas pelo pip

      # Passo 4: Confirmar versão do Python
      - name: Confirmar versão do Python
        run: |
          python --version
          which python

      # Passo 5: Instalar dependências do projeto
      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Passo 6: Restaurar cache do arquivo seen_links.txt
      - name: Restaurar cache
        uses: actions/cache@v3
        with:
          path: seen_links.txt  # Caminho do arquivo que contém os links vistos
          key: seen-links-${{ runner.os }}-v1  # Chave única para o cache
          restore-keys: |
            seen-links-${{ runner.os }}-
            seen-links-

      # Passo 7: Executar o script de monitoramento
      - name: Executar o monitor
        run: python monitor_pgrp.py
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}  # Variável de ambiente com usuário do e-mail
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}  # Variável de ambiente com senha do e-mail

      # Passo 8: Verificar alterações no arquivo seen_links.txt antes de salvar no cache
      - name: Verificar alterações no arquivo seen_links.txt
        id: file-check
        run: |
          if [ -f cache/seen_links.txt ]; then
            cmp -s seen_links.txt cache/seen_links.txt && echo "Cache está atualizado" && exit 0
          fi
          echo "Cache será atualizado"

      # Passo 9: Atualizar cache (se necessário)
      - name: Atualizar cache
        if: steps.file-check.outcome == 'success'
        uses: actions/cache@v3
        with:
          path: seen_links.txt
          key: seen-links-${{ runner.os }}-v1
